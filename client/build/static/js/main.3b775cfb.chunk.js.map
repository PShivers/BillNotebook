{"version":3,"sources":["components/CopayerPopup.js","components/BillTableRow.js","util.js","components/BillListTwo.js","components/Header.js","components/MonthSwitcher.js","components/AddBill.js","components/CreateCopayer.js","App.js","serviceWorker.js","AppContainer.js","index.js"],"names":["CopayerPopup","state","copayerList","this","props","copayers","map","copayer","style","cursor","key","_id","onClick","addCopayerToBill","bill","futureAmountPerPerson","name","Popup","content","trigger","hoverable","Component","BillTableRow","amountPerPerson","amount","length","toFixed","className","handleBillNameClick","isPaid","textDecoration","isBillPaid","deleteBill","handleBillAmountClick","isWithdrawn","isBillWithdrawn","hasPaid","handleCopayerToggle","hasCopayers","dueDate","updateBill","axios","put","BillList","total","console","log","updatedCopayer","updatedBill","bills","id","then","billRes","updateCopayer","copayerRes","refresh","get","res","data","setState","paidBills","unpaidBills","Table","striped","isArchived","backgroundColor","push","reduce","a","c","Header","MonthSwitcher","marginLeft","colSpan","href","changeMonth","monthName","AddBill","showForm","newBill","handleClick","handleSubmitClick","event","preventDefault","split","month","parseInt","year","day","addBill","handleChange","attributeName","target","attributeValue","value","formToggle","type","placeholder","onChange","Button","CreateCopayer","newCopayer","email","handleSubmit","createCopayer","App","modal","monthNum","currentYear","months","componentDidMount","getBillsForCurrentMonth","sortArrayByKey","array","sort","billA","billB","x","y","req","date","Date","getFullYear","getMonth","sortedBills","currentMonth","currentMonthNum","post","archivedBill","alert","copayerIndex","indexOf","find","person","handleBillFormChange","Boolean","window","location","hostname","match","AppContainer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b775cfb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Popup } from 'semantic-ui-react'\n\n\nclass CopayerPopup extends Component {\n    state = {  }\n\n    render() { \n        let copayerList = this.props.copayers.map(copayer=>{\n            return (\n                <div \n                    style={{cursor: 'pointer'}} \n                    key={copayer._id} \n                    onClick={()=>{\n                        this.props.addCopayerToBill(copayer,this.props.bill,this.props.futureAmountPerPerson)\n                    }} \n                >\n                    {copayer.name}\n                </div>\n            )\n        })\n        return ( <Popup content={copayerList} trigger={<div>+</div>} hoverable /> );\n    }\n}\n\nexport default CopayerPopup","import React from 'react';\nimport CopayerPopup from './CopayerPopup';\n\n\n\nconst BillTableRow = (props) => {\n    \n    const bill = props.bill;\n    const amountPerPerson = (bill.amount / (bill.copayers.length+1)).toFixed(2);\n    const futureAmountPerPerson = (bill.amount / (bill.copayers.length+2)).toFixed(2);\n\n    const isBillWithdrawn = (bill) => {\n        if(bill.isWithdrawn){\n          return <div style={{textDecoration: 'line-through'}}>${bill.amount}</div>\n        } else {\n          return <div>${bill.amount}</div>\n        }\n      }\n\n    const isBillPaid = (bill) => {\n        if(bill.isPaid){\n            return <h2 className=\"ui center aligned header\" style={{textDecoration: 'line-through'}} >{bill.name}\n            </h2>\n        } else {\n            return <h2 className=\"ui center aligned header\" >{bill.name}</h2>\n        }\n    }\n\n    const hasCopayers = (bill) => {\n        if (bill.copayers.length > 0){\n            return <td>${amountPerPerson}</td>\n        } else {\n              return <td></td>\n        }\n    }\n    \n    return ( \n      <tr key ={bill._id}>\n        \n        <td className='flex centered'>\n            <div \n                onClick={()=>{props.handleBillNameClick(bill)}} \n                style={{cursor: \"pointer\"}} \n            >\n                {isBillPaid(bill)}\n            </div>\n\n            <div className=\"flex centered delete-button\" onClick={()=>{props.deleteBill(bill)}} >\n              X\n            </div>\n\n        </td>\n\n        <td className=\"single line\"  onClick={()=>{props.handleBillAmountClick(bill)}} >\n            <div style={{cursor: \"pointer\"}} >\n                {isBillWithdrawn(bill)}\n            </div>\n        </td>\n\n        <td className=\"center aligned\">\n\n          <CopayerPopup \n            copayers={props.copayers} \n            bill={bill}\n            futureAmountPerPerson={futureAmountPerPerson}\n            addCopayerToBill={props.addCopayerToBill} \n          />\n\n          {bill.copayers.map(copayer=>{\n            if(!copayer.hasPaid){\n              return <div onClick={()=>{props.handleCopayerToggle(bill, copayer)}} >{copayer.name}</div>\n            } else if(copayer.hasPaid){\n              return <div onClick={()=>{props.handleCopayerToggle(bill, copayer)}} style={{textDecoration: \"line-through\"}} >{copayer.name}</div>\n            }\n          })\n          }\n\n        </td>\n          \n        {hasCopayers(bill)}\n\n        <td>\n            {bill.dueDate}\n        </td>\n\n      </tr>\n    );\n}\n \nexport default BillTableRow;","import axios from 'axios'\n\n//===================\n//=== Bills =========\n//===================\n\nexport function getBills() {\n    return axios.get('/bills');\n  }\n\nexport function getBillsByMonthAndYear(req) {\n  return axios.get(`/bills/${req.year}/${req.monthNum}`)\n}\n\nexport function addBill(newBill) {\n  return axios.post('/bills', newBill)\n}\n\nexport function updateBill(bill){\n  return axios.put(`/bills/${bill._id}`, bill)\n}\n\nexport function deleteBill(bill){\n  return axios.delete(`/bills/${bill._id}`)\n}\n\n\n//==================\n//== Months ========\n//==================\n\nexport function getMonth() {\n    return axios.get('/months/:id');\n}\n\n//==================\n//== Copayers ======\n//==================\n\nexport function getCopayers(){\n  return axios.get(`/copayers`)\n}\n\nexport function createCopayer(copayer){\n  return axios.post(`/copayers`, copayer)\n}\n\nexport function updateCopayer(copayer){\n  return axios.put(`/copayers/${copayer._id}`, copayer)\n}","import React, {Component} from 'react';\nimport BillTableRow from './BillTableRow';\nimport { Table } from 'reactstrap';\n\n\nimport {getCopayers,updateCopayer,updateBill} from '../util'\n\nclass BillList extends Component {\n  state = {\n    total: [],\n    copayers: []\n  }\n\n  componentDidMount(){\n    getCopayers().then(res=>{\n      const copayers = res.data;\n      this.setState({copayers})\n    });\n  }\n\n  addCopayerToBill = (copayer,bill,futureAmountPerPerson)=>{\n    console.log(futureAmountPerPerson)\n    const updatedCopayer={...copayer};\n    const updatedBill = {...bill};\n\n    updatedCopayer.bills = [...copayer.bills, {id:bill._id,hasPaid:false}];\n    updatedBill.copayers = [...bill.copayers, {id:copayer._id, hasPaid: false, name:copayer.name}];\n\n    updateBill(updatedBill).then(billRes=>{\n      updateCopayer(updatedCopayer).then(copayerRes=>{\n        console.log(copayerRes)\n        this.props.refresh()\n      })\n    })\n    \n  }\n\n  render() {\n    let total = 0\n    const paidBills = [0];\n    const unpaidBills = [0];\n    return (\n      <Table striped>\n        <thead>\n          <tr>\n\n            <th className=\"single line\">Bill</th>\n\n            <th>Total Amount Due</th>\n\n            <th>Co-Payers</th>\n\n            <th>Amount Per Person</th>\n\n            <th>Due Date</th>\n\n          </tr>\n\n        </thead>\n        \n        <tbody>\n\n          {this\n            .props\n            .bills\n            .map(bill => {\n              if(!bill.isArchived){\n                return (\n                <BillTableRow \n                  bill={bill}\n                  deleteBill={this.props.deleteBill}\n                  copayers={this.state.copayers}\n                  isBillPaid={this.isBillPaid}\n                  handleBillNameClick={this.props.handleBillNameClick} \n                  handleBillAmountClick={this.props.handleBillAmountClick} \n                  handleCopayerToggle={this.props.handleCopayerToggle}\n                  addCopayerToBill={this.addCopayerToBill}\n                />\n              )}\n              \n            })}\n        </tbody>\n\n        <tfoot>\n          <tr>\n            <th className=\"single line\">Total</th>\n            <th>\n              {this.props.bills.map(bill=>{\n                if (!bill.isArchived){\n                  total += bill.amount\n                  }\n                })\n              }\n              ${total}\n            </th>\n            <th></th>\n            <th></th>\n            <th></th>\n          </tr>\n        </tfoot>\n        \n        <tfoot>\n          <tr>\n            <th className=\"single line\" style={{backgroundColor: 'red'}} >Total Due</th>\n            <th>\n              {this.props.bills.map(bill=>{\n                if(!bill.isWithdrawn && !bill.isArchived){ \n                  unpaidBills.push(bill.amount)\n                  }\n                })\n              }\n              ${unpaidBills.reduce((a,c)=>{return a+c})}\n            </th>\n            <th></th>\n            <th></th>\n            <th></th>\n          </tr>\n        </tfoot>\n\n        <tfoot>\n          <tr>\n            <th className=\"single line\" style={{backgroundColor: 'green'}} >Total Paid</th>\n            <th>\n            {this.props.bills.map(bill=>{\n                if(bill.isWithdrawn && !bill.isArchived){ \n                  paidBills.push(bill.amount)\n                  }\n                })\n              }\n              ${paidBills.reduce((a,c)=>{return a+c})}\n            </th>\n            <th></th>\n            <th></th>\n            <th></th>\n          </tr>\n        </tfoot>\n\n      </Table>\n    )\n  }\n}\n\nexport default BillList;","import React, {Component} from 'react';\n\nclass Header extends Component {\n  state = {}\n  render() {\n    return (\n      <h2 className=\"ui center aligned icon header title\">\n        {/* <i className=\"dollar sign icon\"></i> */}\n        <div className=\"content title\">\n          BillBook\n          {/* <div className=\"title\">All bills, no frills</div> */}\n        </div>\n      </h2>\n    );\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\n\nclass MonthSwitcher extends Component {\n    state ={\n     \n    }\n\n    render() { \n      // console.log(this.props)\n        return ( \n        <div className=\"ui center aligned\" style={{marginLeft:\"38%\"}}>\n          <tr >\n            <th colSpan=\"5\">\n              <div className=\"ui centered pagination menu\">\n                <div href='#' className=\"icon item\" onClick={this.props.changeMonth}>\n                  <i className=\"left chevron icon\"></i>\n                </div>\n                <div className=\"ui segment\">Month of {this.props.monthName} </div>\n                <div href=\"#\" className=\"icon item\" onClick={this.props.changeMonth}>\n                  <i className=\"right chevron icon\"></i>\n                </div>\n              </div>\n            </th>\n          </tr>\n          \n          \n        </div> );\n    }\n}\n \nexport default MonthSwitcher;","import React, {Component} from 'react';\nimport {Button} from 'reactstrap'\n\n\nclass AddBill extends Component {\n\n  state = {\n    showForm: false,\n    newBill: {\n      name: '',\n      amount: null,\n      dueDate: null,\n      isPaid: false\n    }\n  }\n\n  handleClick = () => {\n    this.setState({\n      showForm: !this.state.showForm,\n      newBill: {\n        name: '',\n        amount: null,\n        dueDate: null,\n        isPaid: false\n      }\n    });\n  }\n\n  handleSubmitClick = (event) => {\n    event.preventDefault();\n    const newBill = {...this.state.newBill};\n    const dueDate = newBill.dueDate.split('-');\n    newBill.month = parseInt(dueDate[1])-1;\n    newBill.year = parseInt(dueDate[0]);\n    newBill.day = parseInt(dueDate[2]);\n    newBill.dueDate = dueDate[1] + \"/\" + dueDate[2];\n    console.log(newBill)\n    this.props.addBill(newBill);\n    this.handleClick();   \n  }\n\n  handleChange=(event)=>{\n    const attributeName = event.target.name;\n    const attributeValue = event.target.value;\n    const newBill = { ...this.state.newBill };\n    newBill[attributeName] = attributeValue;\n    this.setState({ newBill }, () => {\n      console.log(this.state.newBill)\n    });\n  }\n\n  formToggle = () => {\n    if (this.state.showForm) {\n      return (\n        <div >\n          <form>\n            <input \n            type=\"text\" \n            name=\"name\" \n            placeholder=\"Bill Name\" \n            onChange={this.handleChange} \n            value={this.state.newBill.name}\n          />\n            <input \n              type=\"number\" \n              name=\"amount\"\n              placeholder=\"Bill Amount\"  \n              onChange={this.handleChange} \n              value={this.state.newBill.amount}\n            />\n            <input \n              type='date' \n              placeholder=\"Due Date\" \n\n              onChange={this.handleChange} \n              name=\"dueDate\"\n            />\n            <input \n              type=\"Submit\" \n              onClick={this.handleSubmitClick}\n            />\n          </form>\n        </div>\n      )\n    }\n  }\n\n  render() {\n\n    return (\n      <div \n        className=\"flex column centered margin\"\n      >\n        <Button \n          onClick={this.handleClick}\n        >\n          Add Bill\n        </Button>\n        <div>\n          {this.formToggle()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddBill;","import React, { Component } from 'react';\nimport {Button} from 'reactstrap'\n\nclass CreateCopayer extends Component {\n    state = { \n        showForm: false,\n        newCopayer: {\n            name: '',\n            email: ''\n        }\n     }\n\n    handleClick = () => {\n        this.setState({\n          showForm: !this.state.showForm\n        });\n    }\n\n    handleChange = (event) => {\n        event.preventDefault();\n        const attributeName = event.target.name;\n        const attributeValue = event.target.value;\n        const newCopayer = { ...this.state.newCopayer };  \n        newCopayer[attributeName] = attributeValue;\n        this.setState({ newCopayer },()=>{});\n    } \n\n    handleSubmit = (event) => {\n        this.props.createCopayer(this.state.newCopayer);\n    }\n\n    formToggle = () => {\n        if(this.state.showForm){\n            return (   \n                <div>\n                    <form>\n    \n                        <input \n                            name=\"name\"\n                            placeholder=\"Name\" \n                            type=\"text\" onChange={this.handleChange} \n                            value={this.state.newCopayer.name} \n                        />\n    \n                        <input \n                            name=\"email\"\n                            placeholder=\"Email Address\" \n                            type=\"text\" onChange={this.handleChange}\n                            value={this.state.newCopayer.email} \n                        />\n                        <button type=\"submit\" onClick={this.handleSubmit}>Submit</button>\n    \n                    </form>\n                </div> \n            );\n        }\n    }\n\n    render() { \n        return (\n        <div\n            className=\"flex column centered\"\n        >\n            <Button onClick={this.handleClick} >Create Copayer</Button>\n            {this.formToggle()}\n        </div>\n        )\n    }\n}\n \nexport default CreateCopayer;","import React, {Component} from 'react';\nimport './App.css'\nimport BillList from './components/BillListTwo';\nimport Header from './components/Header'\nimport MonthSwitcher from './components/MonthSwitcher';\nimport AddBill from './components/AddBill';\nimport CreateCopayer from './components/CreateCopayer'\nimport ParallaxImage from './components/ParallaxImage'\n\nimport {getBillsByMonthAndYear, addBill, updateBill, createCopayer} from './util'\nimport { Parallax } from 'react-scroll-parallax';\n\nclass App extends Component {\n  state = {\n    modal: false,\n    bills: [],\n    newBill: {\n      name: '',\n      amount: null,\n      dueDate: null,\n      isPaid: false\n    },\n    monthNum: null,\n    monthName: \"\",\n    currentYear: null,\n    months: [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ]\n  }\n\n  componentDidMount = () => {\n    this.getBillsForCurrentMonth()\n  }\n\n  //function taken from https://stackoverflow.com/questions/8175093/simple-function-to-sort-an-array-of-objects/8175221#8175221\n  sortArrayByKey=(array, key)=>{\n    return array.sort((billA, billB) => {\n      var x = billA[key]; \n      var y = billB[key];\n      return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n    });\n  }\n\n  refresh = () =>{\n    this.getBillsForCurrentMonth()\n  }\n\n  getBillsForCurrentMonth =()=> {\n    //store current date in a variable called date\n    let date = new Date();\n    //from the variable date pull out the year and assign it to variable 'current year'\n    let currentYear = date.getFullYear();\n    getBillsByMonthAndYear({\n      monthNum: date.getMonth(),\n      year: date.getFullYear()\n    })\n    .then(res => {\n      //assigns the bills return from AJAX req to a variable called 'bills'\n      let bills = res.data;\n      //sorts bills by day\n      const sortedBills = this.sortArrayByKey(bills, \"day\");\n      this.setState({\n        bills: sortedBills,\n        currentYear,\n        monthName: this.state.months[date.getMonth()]\n      })\n    });\n  }\n\n  changeMonth = (x) => {\n    console.log(this.state.currentMonth)\n    if (x) {\n      this.setState({\n        currentMonthNum: this.currentMonthNum++\n      })\n    } else {\n      this.setState({\n        currentMonthNum: this.currentMonthNum--\n      })\n    }\n  }\n\n  addBill=(newBill)=>{\n    addBill(newBill).then(res=>{this.getBillsForCurrentMonth()})\n  }\n\n  createCopayer = (copayer) => {\n    createCopayer(copayer).then(res=>{\n      console.log(res)\n    })\n  }\n\n  //Does not actually delete bill, just toggles isArchived boolean.\n  deleteBill =(bill)=>{\n    let archivedBill = {...bill};\n    archivedBill.isArchived = true;\n    updateBill(archivedBill).then(res=>{this.getBillsForCurrentMonth()})\n  }\n\n  handleBillNameClick = (bill) => {\n    if(!bill.isWithdrawn){\n      const newBill = {...bill};\n      newBill.isPaid = !bill.isPaid;\n      updateBill(newBill).then(res=>{this.getBillsForCurrentMonth()})\n    } else{\n      alert('Cannot remove Paid status if Bill has been marked as withdrawn')\n    }\n  }\n\n  handleBillAmountClick = (bill) => {\n    if(bill.isPaid){\n    const newBill = {...bill};\n    newBill.isWithdrawn = !bill.isWithdrawn;\n    updateBill(newBill).then(res=>{this.getBillsForCurrentMonth()})\n    } else {\n      alert(`Bill must be marked as paid before it can be marked as withdrawn.`)\n    }\n  }\n\n  handleCopayerToggle=(bill, copayer)=>{\n    //store copayer in variable \n    const updatedCopayer = {...copayer};\n    //toggle hasPaid boolean value\n    updatedCopayer.hasPaid = !copayer.hasPaid;\n    const updatedBill = {...bill};\n    //find index of bill.copayer to be replaced\n    const copayerIndex = updatedBill.copayers.indexOf(updatedBill.copayers.find(person => person.id == updatedCopayer.id));\n    updatedBill.copayers[copayerIndex] = updatedCopayer;\n    updateBill(updatedBill).then(res=>{\n      this.getBillsForCurrentMonth()\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <div className='top-portion' >\nheroku         <Header/>\n\n        <MonthSwitcher\n          currentMonth={this.state.currentMonth}\n          monthName={this.state.monthName}\n          changeMonth={this.changeMonth}\n        />\n\n\n        <AddBill \n          handleBillFormChange={this.handleBillFormChange}\n          addBill={this.addBill}\n        />\n\n        <CreateCopayer createCopayer={this.createCopayer} />\n        </div> \n\n        <BillList \n          bills={this.state.bills} \n          deleteBill={this.deleteBill}\n          handleBillNameClick={this.handleBillNameClick} \n          handleBillAmountClick={this.handleBillAmountClick} \n          handleCopayerToggle={this.handleCopayerToggle}\n          refresh={this.refresh}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ParallaxProvider } from 'react-scroll-parallax';\nimport React, { Component } from 'react';\nimport App from './App'\n\nclass AppContainer extends Component {\n    state = {  }\n    render() { \n        return ( \n        <ParallaxProvider>\n            <App />\n        </ParallaxProvider> \n        );\n    }\n}\n \nexport default AppContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'carbon-react/lib/utils/css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport AppContainer from './AppContainer'\n\n\nReactDOM.render(<AppContainer />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}